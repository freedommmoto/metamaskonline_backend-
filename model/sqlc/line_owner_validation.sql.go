// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0
// source: line_owner_validation.sql

package model

import (
	"context"
	"time"
)

const insertLineOwnerValidation = `-- name: InsertLineOwnerValidation :one
INSERT INTO line_owner_validation (code, id_user, created_at)
VALUES ($1, $2 ,$3) RETURNING id_line_owner_validation, code, id_user, created_at, deleted
`

type InsertLineOwnerValidationParams struct {
	Code      string    `json:"code"`
	IDUser    int32     `json:"id_user"`
	CreatedAt time.Time `json:"created_at"`
}

func (q *Queries) InsertLineOwnerValidation(ctx context.Context, arg InsertLineOwnerValidationParams) (LineOwnerValidation, error) {
	row := q.db.QueryRowContext(ctx, insertLineOwnerValidation, arg.Code, arg.IDUser, arg.CreatedAt)
	var i LineOwnerValidation
	err := row.Scan(
		&i.IDLineOwnerValidation,
		&i.Code,
		&i.IDUser,
		&i.CreatedAt,
		&i.Deleted,
	)
	return i, err
}

const selectCodeActive = `-- name: SelectCodeActive :one
select code from line_owner_validation where code=$1 and deleted is null
`

func (q *Queries) SelectCodeActive(ctx context.Context, code string) (string, error) {
	row := q.db.QueryRowContext(ctx, selectCodeActive, code)
	err := row.Scan(&code)
	return code, err
}

const selectLineOwnerValidationByID = `-- name: SelectLineOwnerValidationByID :one
select id_line_owner_validation, code, id_user, created_at, deleted from line_owner_validation where id_user=$1 order by created_at desc limit 1
`

func (q *Queries) SelectLineOwnerValidationByID(ctx context.Context, idUser int32) (LineOwnerValidation, error) {
	row := q.db.QueryRowContext(ctx, selectLineOwnerValidationByID, idUser)
	var i LineOwnerValidation
	err := row.Scan(
		&i.IDLineOwnerValidation,
		&i.Code,
		&i.IDUser,
		&i.CreatedAt,
		&i.Deleted,
	)
	return i, err
}
